use super::*;
use ethabi::{Function, Param};
use moonbeam_runtime::Assets;

pub(crate) const STAKING_CONTRACT_ADDRESS: [u8; 20] = [
    151, 9, 81, 161, 47, 151, 94, 103, 98, 72, 42, 202, 129, 229, 125, 90, 42, 78, 115, 244,
];
// bytecode:object value from ParachainStaking.json, generated by forge build
const CONTRACT_BYTECODE: [u8; 9452] = [
    96, 128, 96, 64, 82, 52, 128, 21, 98, 0, 0, 17, 87, 96, 0, 128, 253, 91, 80, 96, 64, 81, 98, 0,
    36, 236, 56, 3, 128, 98, 0, 36, 236, 131, 57, 129, 1, 96, 64, 129, 144, 82, 98, 0, 0, 52, 145,
    98, 0, 0, 244, 86, 91, 96, 0, 128, 84, 96, 1, 96, 1, 96, 160, 27, 3, 25, 22, 96, 1, 96, 1, 96,
    160, 27, 3, 132, 129, 22, 145, 144, 145, 23, 144, 145, 85, 129, 22, 98, 0, 0, 167, 87, 96, 64,
    81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 22, 96, 36, 130, 1,
    82, 127, 109, 117, 115, 116, 32, 115, 101, 116, 32, 116, 111, 107, 101, 110, 32, 97, 100, 100,
    114, 101, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 68, 130, 1, 82, 96, 100, 1, 96, 64, 81,
    128, 145, 3, 144, 253, 91, 96, 1, 128, 84, 96, 1, 96, 1, 96, 160, 27, 3, 144, 146, 22, 96, 1,
    96, 1, 96, 160, 27, 3, 25, 146, 131, 22, 23, 144, 85, 96, 3, 128, 84, 144, 145, 22, 51, 23,
    144, 85, 80, 98, 0, 1, 43, 86, 91, 128, 81, 96, 1, 96, 1, 96, 160, 27, 3, 129, 22, 129, 20, 98,
    0, 0, 239, 87, 96, 0, 128, 253, 91, 145, 144, 80, 86, 91, 96, 0, 128, 96, 64, 131, 133, 3, 18,
    21, 98, 0, 1, 7, 87, 129, 130, 253, 91, 98, 0, 1, 18, 131, 98, 0, 0, 215, 86, 91, 145, 80, 98,
    0, 1, 34, 96, 32, 132, 1, 98, 0, 0, 215, 86, 91, 144, 80, 146, 80, 146, 144, 80, 86, 91, 97,
    35, 177, 128, 98, 0, 1, 59, 96, 0, 57, 96, 0, 243, 254, 96, 128, 96, 64, 82, 52, 128, 21, 97,
    0, 16, 87, 96, 0, 128, 253, 91, 80, 96, 4, 54, 16, 97, 1, 11, 87, 96, 0, 53, 96, 224, 28, 128,
    99, 134, 152, 144, 56, 17, 97, 0, 162, 87, 128, 99, 154, 190, 147, 229, 17, 97, 0, 113, 87,
    128, 99, 154, 190, 147, 229, 20, 97, 2, 20, 87, 128, 99, 162, 11, 160, 221, 20, 97, 2, 39, 87,
    128, 99, 180, 49, 212, 35, 20, 97, 2, 71, 87, 128, 99, 237, 154, 171, 81, 20, 97, 2, 90, 87,
    128, 99, 252, 12, 84, 106, 20, 97, 2, 107, 87, 97, 1, 11, 86, 91, 128, 99, 134, 152, 144, 56,
    20, 97, 1, 222, 87, 128, 99, 137, 61, 32, 232, 20, 97, 1, 231, 87, 128, 99, 141, 165, 203, 91,
    20, 97, 1, 248, 87, 128, 99, 148, 64, 154, 86, 20, 97, 2, 11, 87, 97, 1, 11, 86, 91, 128, 99,
    52, 166, 33, 189, 17, 97, 0, 222, 87, 128, 99, 52, 166, 33, 189, 20, 97, 1, 121, 87, 128, 99,
    90, 166, 230, 117, 20, 97, 1, 140, 87, 128, 99, 97, 131, 35, 233, 20, 97, 1, 159, 87, 128, 99,
    115, 37, 36, 148, 20, 97, 1, 205, 87, 97, 1, 11, 86, 91, 128, 99, 14, 8, 211, 253, 20, 97, 1,
    16, 87, 128, 99, 16, 254, 154, 232, 20, 97, 1, 37, 87, 128, 99, 25, 171, 69, 60, 20, 97, 1, 79,
    87, 128, 99, 52, 127, 35, 54, 20, 97, 1, 98, 87, 91, 96, 0, 128, 253, 91, 97, 1, 35, 97, 1, 30,
    54, 96, 4, 97, 29, 77, 86, 91, 97, 2, 126, 86, 91, 0, 91, 96, 1, 84, 96, 1, 96, 1, 96, 160, 27,
    3, 22, 91, 96, 64, 81, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 129, 82, 96, 32, 1, 91, 96,
    64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 35, 97, 1, 93, 54, 96, 4, 97, 27, 218, 86, 91, 97, 6,
    29, 86, 91, 97, 1, 107, 96, 6, 84, 129, 86, 91, 96, 64, 81, 144, 129, 82, 96, 32, 1, 97, 1, 70,
    86, 91, 97, 1, 35, 97, 1, 135, 54, 96, 4, 97, 29, 161, 86, 91, 97, 7, 103, 86, 91, 96, 2, 84,
    97, 1, 50, 144, 96, 1, 96, 1, 96, 160, 27, 3, 22, 129, 86, 91, 97, 1, 178, 97, 1, 173, 54, 96,
    4, 97, 29, 105, 86, 91, 97, 13, 135, 86, 91, 96, 64, 128, 81, 147, 132, 82, 96, 32, 132, 1,
    146, 144, 146, 82, 144, 130, 1, 82, 96, 96, 1, 97, 1, 70, 86, 91, 96, 2, 84, 96, 1, 96, 1, 96,
    160, 27, 3, 22, 97, 1, 50, 86, 91, 97, 1, 107, 96, 5, 84, 129, 86, 91, 96, 3, 84, 96, 1, 96, 1,
    96, 160, 27, 3, 22, 97, 1, 50, 86, 91, 96, 3, 84, 97, 1, 50, 144, 96, 1, 96, 1, 96, 160, 27, 3,
    22, 129, 86, 91, 97, 1, 107, 96, 4, 84, 129, 86, 91, 97, 1, 35, 97, 2, 34, 54, 96, 4, 97, 30,
    39, 86, 91, 97, 13, 195, 86, 91, 97, 2, 58, 97, 2, 53, 54, 96, 4, 97, 29, 105, 86, 91, 97, 16,
    78, 86, 91, 96, 64, 81, 97, 1, 70, 145, 144, 97, 32, 26, 86, 91, 97, 1, 107, 97, 2, 85, 54, 96,
    4, 97, 28, 251, 86, 91, 97, 17, 18, 86, 91, 96, 0, 84, 96, 1, 96, 1, 96, 160, 27, 3, 22, 97, 1,
    50, 86, 91, 96, 1, 84, 97, 1, 50, 144, 96, 1, 96, 1, 96, 160, 27, 3, 22, 129, 86, 91, 96, 0,
    128, 84, 96, 64, 81, 99, 58, 251, 114, 139, 96, 226, 27, 129, 82, 99, 255, 255, 255, 255, 132,
    22, 96, 4, 130, 1, 82, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 144, 99, 235, 237, 202, 44,
    144, 96, 36, 1, 96, 0, 96, 64, 81, 128, 131, 3, 129, 134, 128, 59, 21, 128, 21, 97, 2, 200, 87,
    96, 0, 128, 253, 91, 80, 90, 250, 21, 128, 21, 97, 2, 220, 87, 61, 96, 0, 128, 62, 61, 96, 0,
    253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 0, 130, 62, 96, 31, 61, 144, 129, 1, 96, 31, 25,
    22, 130, 1, 96, 64, 82, 97, 3, 4, 145, 144, 129, 1, 144, 97, 28, 22, 86, 91, 96, 32, 129, 1,
    81, 144, 145, 80, 96, 1, 96, 1, 96, 160, 27, 3, 22, 97, 3, 58, 87, 96, 64, 81, 98, 70, 27, 205,
    96, 229, 27, 129, 82, 96, 4, 1, 97, 3, 49, 144, 97, 32, 45, 86, 91, 96, 64, 81, 128, 145, 3,
    144, 253, 91, 99, 255, 255, 255, 255, 130, 22, 96, 0, 144, 129, 82, 96, 8, 96, 32, 144, 129,
    82, 96, 64, 128, 131, 32, 51, 132, 82, 144, 145, 82, 144, 32, 128, 84, 129, 144, 98, 9, 58,
    128, 144, 97, 3, 109, 144, 66, 97, 34, 163, 86, 91, 16, 21, 97, 3, 187, 87, 96, 64, 81, 98, 70,
    27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 23, 96, 36, 130, 1, 82, 127, 108,
    111, 99, 107, 32, 112, 101, 114, 105, 111, 100, 32, 110, 111, 116, 32, 101, 120, 112, 105, 114,
    101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91, 96, 0,
    129, 96, 2, 1, 84, 17, 97, 4, 15, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96,
    32, 96, 4, 130, 1, 82, 96, 29, 96, 36, 130, 1, 82, 127, 110, 111, 32, 108, 111, 99, 107, 101,
    100, 32, 98, 97, 108, 97, 110, 99, 101, 32, 116, 111, 32, 119, 105, 116, 104, 100, 114, 97,
    119, 0, 0, 0, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91, 96, 2, 129, 1, 84, 96, 1, 84,
    96, 64, 81, 99, 169, 5, 156, 187, 96, 224, 27, 129, 82, 51, 96, 4, 130, 1, 82, 96, 36, 129, 1,
    131, 144, 82, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 144, 99, 169, 5, 156, 187, 144, 96,
    68, 1, 96, 32, 96, 64, 81, 128, 131, 3, 129, 96, 0, 135, 128, 59, 21, 128, 21, 97, 4, 96, 87,
    96, 0, 128, 253, 91, 80, 90, 241, 21, 128, 21, 97, 4, 116, 87, 61, 96, 0, 128, 62, 61, 96, 0,
    253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 31, 25, 96, 31, 130, 1, 22, 130, 1, 128, 96, 64,
    82, 80, 129, 1, 144, 97, 4, 152, 145, 144, 97, 27, 246, 86, 91, 97, 4, 240, 87, 96, 64, 81, 98,
    70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 36, 128, 130, 1, 82, 127,
    119, 105, 116, 104, 100, 114, 97, 119, 32, 115, 116, 97, 107, 101, 32, 116, 111, 107, 101, 110,
    32, 116, 114, 97, 110, 115, 102, 101, 114, 32, 102, 97, 96, 68, 130, 1, 82, 99, 26, 91, 25, 89,
    96, 226, 27, 96, 100, 130, 1, 82, 96, 132, 1, 97, 3, 49, 86, 91, 128, 96, 6, 96, 0, 130, 130,
    84, 97, 5, 2, 145, 144, 97, 34, 163, 86, 91, 144, 145, 85, 80, 80, 96, 0, 96, 2, 131, 1, 85,
    96, 64, 81, 51, 129, 82, 127, 74, 121, 52, 103, 11, 216, 48, 78, 125, 162, 35, 120, 190, 19,
    104, 247, 196, 254, 241, 124, 90, 238, 129, 128, 75, 237, 168, 99, 143, 228, 40, 236, 144, 96,
    32, 1, 96, 64, 81, 128, 145, 3, 144, 161, 96, 64, 128, 81, 99, 255, 255, 255, 255, 135, 22,
    129, 82, 51, 96, 32, 130, 1, 82, 127, 241, 155, 145, 228, 79, 141, 193, 166, 121, 112, 4, 187,
    0, 158, 85, 101, 4, 77, 120, 200, 30, 35, 184, 252, 41, 28, 112, 86, 160, 129, 213, 7, 145, 1,
    96, 64, 81, 128, 145, 3, 144, 161, 97, 6, 22, 132, 132, 96, 3, 1, 128, 84, 97, 5, 146, 144, 97,
    34, 234, 86, 91, 128, 96, 31, 1, 96, 32, 128, 145, 4, 2, 96, 32, 1, 96, 64, 81, 144, 129, 1,
    96, 64, 82, 128, 146, 145, 144, 129, 129, 82, 96, 32, 1, 130, 128, 84, 97, 5, 190, 144, 97, 34,
    234, 86, 91, 128, 21, 97, 6, 11, 87, 128, 96, 31, 16, 97, 5, 224, 87, 97, 1, 0, 128, 131, 84,
    4, 2, 131, 82, 145, 96, 32, 1, 145, 97, 6, 11, 86, 91, 130, 1, 145, 144, 96, 0, 82, 96, 32, 96,
    0, 32, 144, 91, 129, 84, 129, 82, 144, 96, 1, 1, 144, 96, 32, 1, 128, 131, 17, 97, 5, 238, 87,
    130, 144, 3, 96, 31, 22, 130, 1, 145, 91, 80, 80, 80, 80, 80, 131, 97, 20, 232, 86, 91, 80, 80,
    80, 80, 80, 86, 91, 96, 3, 84, 96, 1, 96, 1, 96, 160, 27, 3, 22, 51, 20, 97, 6, 133, 87, 96,
    64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 37, 96, 36, 130,
    1, 82, 127, 111, 110, 108, 121, 32, 111, 119, 110, 101, 114, 32, 99, 97, 110, 32, 115, 101,
    116, 32, 103, 111, 118, 101, 114, 110, 97, 110, 99, 101, 32, 97, 100, 96, 68, 130, 1, 82, 100,
    100, 114, 101, 115, 115, 96, 216, 27, 96, 100, 130, 1, 82, 96, 132, 1, 97, 3, 49, 86, 91, 96,
    2, 84, 96, 1, 96, 1, 96, 160, 27, 3, 22, 21, 97, 6, 222, 87, 96, 64, 81, 98, 70, 27, 205, 96,
    229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 30, 96, 36, 130, 1, 82, 127, 103, 111, 118,
    101, 114, 110, 97, 110, 99, 101, 32, 97, 100, 100, 114, 101, 115, 115, 32, 97, 108, 114, 101,
    97, 100, 121, 32, 115, 101, 116, 0, 0, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91, 96,
    1, 96, 1, 96, 160, 27, 3, 129, 22, 97, 7, 69, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27,
    129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 40, 96, 36, 130, 1, 82, 127, 103, 111, 118, 101, 114,
    110, 97, 110, 99, 101, 32, 97, 100, 100, 114, 101, 115, 115, 32, 99, 97, 110, 39, 116, 32, 98,
    101, 32, 122, 101, 114, 111, 96, 68, 130, 1, 82, 103, 32, 97, 100, 100, 114, 101, 115, 115, 96,
    192, 27, 96, 100, 130, 1, 82, 96, 132, 1, 97, 3, 49, 86, 91, 96, 2, 128, 84, 96, 1, 96, 1, 96,
    160, 27, 3, 25, 22, 96, 1, 96, 1, 96, 160, 27, 3, 146, 144, 146, 22, 145, 144, 145, 23, 144,
    85, 86, 91, 96, 2, 84, 96, 1, 96, 1, 96, 160, 27, 3, 22, 97, 7, 191, 87, 96, 64, 81, 98, 70,
    27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 26, 96, 36, 130, 1, 82, 127, 103,
    111, 118, 101, 114, 110, 97, 110, 99, 101, 32, 97, 100, 100, 114, 101, 115, 115, 32, 110, 111,
    116, 32, 115, 101, 116, 0, 0, 0, 0, 0, 0, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91,
    96, 0, 128, 84, 96, 64, 81, 99, 58, 251, 114, 139, 96, 226, 27, 129, 82, 99, 255, 255, 255,
    255, 135, 22, 96, 4, 130, 1, 82, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 144, 99, 235, 237,
    202, 44, 144, 96, 36, 1, 96, 0, 96, 64, 81, 128, 131, 3, 129, 134, 128, 59, 21, 128, 21, 97, 8,
    9, 87, 96, 0, 128, 253, 91, 80, 90, 250, 21, 128, 21, 97, 8, 29, 87, 61, 96, 0, 128, 62, 61,
    96, 0, 253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 0, 130, 62, 96, 31, 61, 144, 129, 1, 96,
    31, 25, 22, 130, 1, 96, 64, 82, 97, 8, 69, 145, 144, 129, 1, 144, 97, 28, 22, 86, 91, 96, 32,
    129, 1, 81, 144, 145, 80, 96, 1, 96, 1, 96, 160, 27, 3, 22, 97, 8, 114, 87, 96, 64, 81, 98, 70,
    27, 205, 96, 229, 27, 129, 82, 96, 4, 1, 97, 3, 49, 144, 97, 32, 45, 86, 91, 99, 255, 255, 255,
    255, 133, 22, 96, 0, 144, 129, 82, 96, 9, 96, 32, 82, 96, 64, 128, 130, 32, 144, 81, 97, 8,
    151, 144, 135, 144, 135, 144, 97, 30, 240, 86, 91, 144, 129, 82, 96, 64, 81, 144, 129, 144, 3,
    96, 32, 1, 144, 32, 84, 96, 1, 96, 1, 96, 160, 27, 3, 22, 20, 128, 97, 8, 251, 87, 80, 99, 255,
    255, 255, 255, 133, 22, 96, 0, 144, 129, 82, 96, 9, 96, 32, 82, 96, 64, 144, 129, 144, 32, 144,
    81, 51, 145, 144, 97, 8, 224, 144, 135, 144, 135, 144, 97, 30, 240, 86, 91, 144, 129, 82, 96,
    64, 81, 144, 129, 144, 3, 96, 32, 1, 144, 32, 84, 96, 1, 96, 1, 96, 160, 27, 3, 22, 20, 91, 97,
    9, 88, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96,
    40, 96, 36, 130, 1, 82, 127, 97, 99, 99, 111, 117, 110, 116, 32, 97, 108, 114, 101, 97, 100,
    121, 32, 108, 105, 110, 107, 101, 100, 32, 116, 111, 32, 97, 110, 111, 116, 104, 101, 96, 68,
    130, 1, 82, 103, 57, 16, 57, 186, 48, 181, 178, 185, 96, 193, 27, 96, 100, 130, 1, 82, 96, 132,
    1, 97, 3, 49, 86, 91, 96, 0, 97, 9, 100, 134, 51, 97, 13, 135, 86, 91, 96, 1, 84, 96, 64, 81,
    99, 112, 160, 130, 49, 96, 224, 27, 129, 82, 51, 96, 4, 130, 1, 82, 145, 148, 80, 132, 147, 80,
    96, 1, 96, 1, 96, 160, 27, 3, 22, 145, 80, 99, 112, 160, 130, 49, 144, 96, 36, 1, 96, 32, 96,
    64, 81, 128, 131, 3, 129, 134, 128, 59, 21, 128, 21, 97, 9, 172, 87, 96, 0, 128, 253, 91, 80,
    90, 250, 21, 128, 21, 97, 9, 192, 87, 61, 96, 0, 128, 62, 61, 96, 0, 253, 91, 80, 80, 80, 80,
    96, 64, 81, 61, 96, 31, 25, 96, 31, 130, 1, 22, 130, 1, 128, 96, 64, 82, 80, 129, 1, 144, 97,
    9, 228, 145, 144, 97, 28, 227, 86, 91, 97, 9, 238, 145, 144, 97, 34, 16, 86, 91, 131, 17, 21,
    97, 10, 52, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82,
    96, 20, 96, 36, 130, 1, 82, 115, 105, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 32,
    98, 97, 108, 97, 110, 99, 101, 96, 96, 27, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91,
    99, 255, 255, 255, 255, 134, 22, 96, 0, 144, 129, 82, 96, 8, 96, 32, 144, 129, 82, 96, 64, 128,
    131, 32, 51, 132, 82, 144, 145, 82, 144, 32, 97, 10, 98, 96, 3, 130, 1, 135, 135, 97, 25, 93,
    86, 91, 80, 99, 255, 255, 255, 255, 135, 22, 96, 0, 144, 129, 82, 96, 9, 96, 32, 82, 96, 64,
    144, 129, 144, 32, 144, 81, 51, 145, 144, 97, 10, 140, 144, 137, 144, 137, 144, 97, 30, 240,
    86, 91, 144, 129, 82, 96, 64, 81, 144, 129, 144, 3, 96, 32, 1, 144, 32, 128, 84, 96, 1, 96, 1,
    96, 160, 27, 3, 146, 144, 146, 22, 96, 1, 96, 1, 96, 160, 27, 3, 25, 144, 146, 22, 145, 144,
    145, 23, 144, 85, 96, 2, 129, 1, 84, 129, 144, 128, 21, 97, 12, 24, 87, 133, 129, 16, 97, 11,
    7, 87, 133, 130, 96, 2, 1, 96, 0, 130, 130, 84, 97, 10, 227, 145, 144, 97, 34, 163, 86, 91,
    146, 80, 80, 129, 144, 85, 80, 133, 96, 6, 96, 0, 130, 130, 84, 97, 10, 252, 145, 144, 97, 34,
    163, 86, 91, 144, 145, 85, 80, 97, 12, 19, 144, 80, 86, 91, 96, 1, 84, 96, 1, 96, 1, 96, 160,
    27, 3, 22, 99, 35, 184, 114, 221, 51, 48, 97, 11, 36, 133, 139, 97, 34, 163, 86, 91, 96, 64,
    81, 96, 1, 96, 1, 96, 224, 27, 3, 25, 96, 224, 134, 144, 27, 22, 129, 82, 96, 1, 96, 1, 96,
    160, 27, 3, 147, 132, 22, 96, 4, 130, 1, 82, 146, 144, 145, 22, 96, 36, 131, 1, 82, 96, 68,
    130, 1, 82, 96, 100, 1, 96, 32, 96, 64, 81, 128, 131, 3, 129, 96, 0, 135, 128, 59, 21, 128, 21,
    97, 11, 115, 87, 96, 0, 128, 253, 91, 80, 90, 241, 21, 128, 21, 97, 11, 135, 87, 61, 96, 0,
    128, 62, 61, 96, 0, 253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 31, 25, 96, 31, 130, 1, 22,
    130, 1, 128, 96, 64, 82, 80, 129, 1, 144, 97, 11, 171, 145, 144, 97, 27, 246, 86, 91, 97, 11,
    240, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 22,
    96, 36, 130, 1, 82, 117, 29, 28, 152, 91, 156, 217, 153, 92, 136, 24, 216, 92, 217, 72, 12, 72,
    25, 152, 90, 91, 25, 89, 96, 82, 27, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91, 129,
    96, 2, 1, 84, 96, 6, 96, 0, 130, 130, 84, 97, 12, 6, 145, 144, 97, 34, 163, 86, 91, 144, 145,
    85, 80, 80, 96, 0, 96, 2, 131, 1, 85, 91, 97, 12, 231, 86, 91, 96, 1, 84, 96, 64, 81, 99, 35,
    184, 114, 221, 96, 224, 27, 129, 82, 51, 96, 4, 130, 1, 82, 48, 96, 36, 130, 1, 82, 96, 68,
    129, 1, 136, 144, 82, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 144, 99, 35, 184, 114, 221,
    144, 96, 100, 1, 96, 32, 96, 64, 81, 128, 131, 3, 129, 96, 0, 135, 128, 59, 21, 128, 21, 97,
    12, 106, 87, 96, 0, 128, 253, 91, 80, 90, 241, 21, 128, 21, 97, 12, 126, 87, 61, 96, 0, 128,
    62, 61, 96, 0, 253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 31, 25, 96, 31, 130, 1, 22, 130, 1,
    128, 96, 64, 82, 80, 129, 1, 144, 97, 12, 162, 145, 144, 97, 27, 246, 86, 91, 97, 12, 231, 87,
    96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 22, 96, 36,
    130, 1, 82, 117, 29, 28, 152, 91, 156, 217, 153, 92, 136, 24, 216, 92, 217, 72, 12, 136, 25,
    152, 90, 91, 25, 89, 96, 82, 27, 96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91, 133, 130,
    96, 1, 1, 96, 0, 130, 130, 84, 97, 12, 251, 145, 144, 97, 34, 16, 86, 91, 144, 145, 85, 80, 80,
    66, 130, 85, 96, 64, 81, 134, 144, 51, 144, 127, 169, 108, 44, 206, 101, 17, 154, 33, 112, 209,
    113, 26, 110, 130, 241, 143, 32, 6, 68, 136, 40, 72, 59, 167, 84, 94, 89, 84, 118, 84, 54, 71,
    144, 96, 0, 144, 163, 127, 212, 160, 162, 115, 147, 117, 65, 46, 80, 131, 56, 133, 199, 64, 30,
    58, 91, 246, 196, 85, 183, 89, 126, 181, 72, 198, 169, 214, 178, 64, 18, 224, 137, 51, 138,
    138, 138, 96, 64, 81, 97, 13, 103, 149, 148, 147, 146, 145, 144, 97, 32, 203, 86, 91, 96, 64,
    81, 128, 145, 3, 144, 161, 97, 13, 124, 133, 51, 138, 138, 138, 97, 21, 130, 86, 91, 80, 80,
    80, 80, 80, 80, 80, 80, 80, 86, 91, 99, 255, 255, 255, 255, 145, 144, 145, 22, 96, 0, 144, 129,
    82, 96, 8, 96, 32, 144, 129, 82, 96, 64, 128, 131, 32, 96, 1, 96, 1, 96, 160, 27, 3, 144, 148,
    22, 131, 82, 146, 144, 82, 32, 128, 84, 96, 1, 130, 1, 84, 96, 2, 144, 146, 1, 84, 144, 146,
    86, 91, 96, 0, 128, 84, 96, 64, 81, 99, 58, 251, 114, 139, 96, 226, 27, 129, 82, 99, 255, 255,
    255, 255, 133, 22, 96, 4, 130, 1, 82, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 144, 99, 235,
    237, 202, 44, 144, 96, 36, 1, 96, 0, 96, 64, 81, 128, 131, 3, 129, 134, 128, 59, 21, 128, 21,
    97, 14, 13, 87, 96, 0, 128, 253, 91, 80, 90, 250, 21, 128, 21, 97, 14, 33, 87, 61, 96, 0, 128,
    62, 61, 96, 0, 253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 0, 130, 62, 96, 31, 61, 144, 129,
    1, 96, 31, 25, 22, 130, 1, 96, 64, 82, 97, 14, 73, 145, 144, 129, 1, 144, 97, 28, 22, 86, 91,
    96, 32, 129, 1, 81, 144, 145, 80, 96, 1, 96, 1, 96, 160, 27, 3, 22, 97, 14, 118, 87, 96, 64,
    81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 4, 1, 97, 3, 49, 144, 97, 32, 45, 86, 91, 99,
    255, 255, 255, 255, 131, 22, 96, 0, 144, 129, 82, 96, 8, 96, 32, 144, 129, 82, 96, 64, 128,
    131, 32, 51, 132, 82, 144, 145, 82, 144, 32, 96, 1, 129, 1, 84, 129, 144, 132, 17, 21, 97, 14,
    236, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 27,
    96, 36, 130, 1, 82, 127, 105, 110, 115, 117, 102, 102, 105, 99, 105, 101, 110, 116, 32, 115,
    116, 97, 107, 101, 100, 32, 98, 97, 108, 97, 110, 99, 101, 0, 0, 0, 0, 0, 96, 68, 130, 1, 82,
    96, 100, 1, 97, 3, 49, 86, 91, 66, 129, 85, 96, 1, 129, 1, 128, 84, 133, 145, 144, 96, 0, 144,
    97, 15, 6, 144, 132, 144, 97, 34, 163, 86, 91, 146, 80, 80, 129, 144, 85, 80, 131, 129, 96, 2,
    1, 96, 0, 130, 130, 84, 97, 15, 33, 145, 144, 97, 34, 16, 86, 91, 146, 80, 80, 129, 144, 85,
    80, 131, 96, 6, 96, 0, 130, 130, 84, 97, 15, 58, 145, 144, 97, 34, 16, 86, 91, 144, 145, 85,
    80, 80, 96, 64, 128, 81, 51, 129, 82, 96, 32, 129, 1, 134, 144, 82, 127, 61, 141, 157, 244,
    189, 1, 114, 223, 50, 229, 87, 250, 72, 233, 100, 53, 205, 127, 44, 172, 6, 170, 255, 172, 250,
    238, 96, 142, 111, 120, 152, 239, 145, 1, 96, 64, 81, 128, 145, 3, 144, 161, 127, 144, 209,
    196, 214, 155, 9, 26, 229, 114, 54, 141, 43, 244, 234, 69, 72, 189, 254, 213, 113, 63, 104, 23,
    68, 52, 53, 90, 164, 229, 150, 206, 120, 133, 131, 96, 3, 1, 134, 96, 64, 81, 97, 15, 174, 147,
    146, 145, 144, 97, 33, 33, 86, 91, 96, 64, 81, 128, 145, 3, 144, 161, 97, 6, 22, 131, 131, 96,
    3, 1, 128, 84, 97, 15, 201, 144, 97, 34, 234, 86, 91, 128, 96, 31, 1, 96, 32, 128, 145, 4, 2,
    96, 32, 1, 96, 64, 81, 144, 129, 1, 96, 64, 82, 128, 146, 145, 144, 129, 129, 82, 96, 32, 1,
    130, 128, 84, 97, 15, 245, 144, 97, 34, 234, 86, 91, 128, 21, 97, 16, 66, 87, 128, 96, 31, 16,
    97, 16, 23, 87, 97, 1, 0, 128, 131, 84, 4, 2, 131, 82, 145, 96, 32, 1, 145, 97, 16, 66, 86, 91,
    130, 1, 145, 144, 96, 0, 82, 96, 32, 96, 0, 32, 144, 91, 129, 84, 129, 82, 144, 96, 1, 1, 144,
    96, 32, 1, 128, 131, 17, 97, 16, 37, 87, 130, 144, 3, 96, 31, 22, 130, 1, 145, 91, 80, 80, 80,
    80, 80, 134, 51, 97, 22, 21, 86, 91, 99, 255, 255, 255, 255, 130, 22, 96, 0, 144, 129, 82, 96,
    8, 96, 32, 144, 129, 82, 96, 64, 128, 131, 32, 96, 1, 96, 1, 96, 160, 27, 3, 133, 22, 132, 82,
    144, 145, 82, 144, 32, 96, 3, 129, 1, 128, 84, 96, 96, 146, 145, 144, 97, 16, 139, 144, 97, 34,
    234, 86, 91, 128, 96, 31, 1, 96, 32, 128, 145, 4, 2, 96, 32, 1, 96, 64, 81, 144, 129, 1, 96,
    64, 82, 128, 146, 145, 144, 129, 129, 82, 96, 32, 1, 130, 128, 84, 97, 16, 183, 144, 97, 34,
    234, 86, 91, 128, 21, 97, 17, 4, 87, 128, 96, 31, 16, 97, 16, 217, 87, 97, 1, 0, 128, 131, 84,
    4, 2, 131, 82, 145, 96, 32, 1, 145, 97, 17, 4, 86, 91, 130, 1, 145, 144, 96, 0, 82, 96, 32, 96,
    0, 32, 144, 91, 129, 84, 129, 82, 144, 96, 1, 1, 144, 96, 32, 1, 128, 131, 17, 97, 16, 231, 87,
    130, 144, 3, 96, 31, 22, 130, 1, 145, 91, 80, 80, 80, 80, 80, 145, 80, 80, 146, 145, 80, 80,
    86, 91, 96, 2, 84, 96, 0, 144, 96, 1, 96, 1, 96, 160, 27, 3, 22, 51, 20, 97, 17, 122, 87, 96,
    64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 34, 96, 36, 130,
    1, 82, 127, 111, 110, 108, 121, 32, 103, 111, 118, 101, 114, 110, 97, 110, 99, 101, 32, 99, 97,
    110, 32, 115, 108, 97, 115, 104, 32, 114, 101, 112, 111, 114, 116, 96, 68, 130, 1, 82, 97, 50,
    185, 96, 241, 27, 96, 100, 130, 1, 82, 96, 132, 1, 97, 3, 49, 86, 91, 96, 0, 128, 84, 96, 64,
    81, 99, 58, 251, 114, 139, 96, 226, 27, 129, 82, 99, 255, 255, 255, 255, 135, 22, 96, 4, 130,
    1, 82, 96, 1, 96, 1, 96, 160, 27, 3, 144, 145, 22, 144, 99, 235, 237, 202, 44, 144, 96, 36, 1,
    96, 0, 96, 64, 81, 128, 131, 3, 129, 134, 128, 59, 21, 128, 21, 97, 17, 196, 87, 96, 0, 128,
    253, 91, 80, 90, 250, 21, 128, 21, 97, 17, 216, 87, 61, 96, 0, 128, 62, 61, 96, 0, 253, 91, 80,
    80, 80, 80, 96, 64, 81, 61, 96, 0, 130, 62, 96, 31, 61, 144, 129, 1, 96, 31, 25, 22, 130, 1,
    96, 64, 82, 97, 18, 0, 145, 144, 129, 1, 144, 97, 28, 22, 86, 91, 96, 32, 129, 1, 81, 144, 145,
    80, 96, 1, 96, 1, 96, 160, 27, 3, 22, 97, 18, 45, 87, 96, 64, 81, 98, 70, 27, 205, 96, 229, 27,
    129, 82, 96, 4, 1, 97, 3, 49, 144, 97, 32, 45, 86, 91, 99, 255, 255, 255, 255, 133, 22, 96, 0,
    144, 129, 82, 96, 8, 96, 32, 144, 129, 82, 96, 64, 128, 131, 32, 96, 1, 96, 1, 96, 160, 27, 3,
    136, 22, 132, 82, 144, 145, 82, 144, 32, 96, 1, 129, 1, 84, 96, 2, 130, 1, 84, 130, 145, 144,
    137, 129, 16, 97, 18, 162, 87, 137, 131, 96, 2, 1, 96, 0, 130, 130, 84, 97, 18, 126, 145, 144,
    97, 34, 163, 86, 91, 146, 80, 80, 129, 144, 85, 80, 137, 96, 6, 96, 0, 130, 130, 84, 97, 18,
    151, 145, 144, 97, 34, 163, 86, 91, 144, 145, 85, 80, 97, 19, 35, 144, 80, 86, 91, 137, 97, 18,
    173, 131, 131, 97, 34, 16, 86, 91, 16, 97, 18, 241, 87, 97, 18, 188, 129, 139, 97, 34, 163, 86,
    91, 97, 18, 198, 144, 131, 97, 34, 163, 86, 91, 131, 96, 1, 1, 129, 144, 85, 80, 128, 96, 6,
    96, 0, 130, 130, 84, 97, 18, 224, 145, 144, 97, 34, 163, 86, 91, 144, 145, 85, 80, 80, 96, 0,
    96, 2, 132, 1, 85, 97, 19, 35, 86, 91, 97, 18, 251, 129, 131, 97, 34, 16, 86, 91, 153, 80, 128,
    96, 6, 96, 0, 130, 130, 84, 97, 19, 15, 145, 144, 97, 34, 163, 86, 91, 144, 145, 85, 80, 80,
    96, 0, 96, 1, 132, 1, 129, 144, 85, 96, 2, 132, 1, 85, 91, 137, 21, 97, 20, 218, 87, 96, 1, 84,
    96, 64, 81, 99, 169, 5, 156, 187, 96, 224, 27, 129, 82, 96, 1, 96, 1, 96, 160, 27, 3, 137, 129,
    22, 96, 4, 131, 1, 82, 96, 36, 130, 1, 141, 144, 82, 144, 145, 22, 144, 99, 169, 5, 156, 187,
    144, 96, 68, 1, 96, 32, 96, 64, 81, 128, 131, 3, 129, 96, 0, 135, 128, 59, 21, 128, 21, 97, 19,
    119, 87, 96, 0, 128, 253, 91, 80, 90, 241, 21, 128, 21, 97, 19, 139, 87, 61, 96, 0, 128, 62,
    61, 96, 0, 253, 91, 80, 80, 80, 80, 96, 64, 81, 61, 96, 31, 25, 96, 31, 130, 1, 22, 130, 1,
    128, 96, 64, 82, 80, 129, 1, 144, 97, 19, 175, 145, 144, 97, 27, 246, 86, 91, 97, 19, 237, 87,
    96, 64, 81, 98, 70, 27, 205, 96, 229, 27, 129, 82, 96, 32, 96, 4, 130, 1, 82, 96, 15, 96, 36,
    130, 1, 82, 110, 29, 28, 152, 91, 156, 217, 153, 92, 136, 25, 152, 90, 91, 25, 89, 96, 138, 27,
    96, 68, 130, 1, 82, 96, 100, 1, 97, 3, 49, 86, 91, 96, 64, 128, 81, 99, 255, 255, 255, 255,
    139, 22, 129, 82, 96, 1, 96, 1, 96, 160, 27, 3, 138, 129, 22, 96, 32, 131, 1, 82, 137, 22, 129,
    131, 1, 82, 96, 96, 129, 1, 140, 144, 82, 144, 81, 127, 85, 197, 219, 51, 68, 118, 177, 201,
    74, 149, 27, 39, 134, 177, 161, 22, 28, 215, 213, 47, 218, 255, 35, 29, 41, 248, 170, 249, 176,
    169, 84, 185, 145, 129, 144, 3, 96, 128, 1, 144, 161, 97, 20, 218, 133, 133, 96, 3, 1, 128, 84,
    97, 20, 86, 144, 97, 34, 234, 86, 91, 128, 96, 31, 1, 96, 32, 128, 145, 4, 2, 96, 32, 1, 96,
    64, 81, 144, 129, 1, 96, 64, 82, 128, 146, 145, 144, 129, 129, 82, 96, 32, 1, 130, 128, 84, 97,
    20, 130, 144, 97, 34, 234, 86, 91, 128, 21, 97, 20, 207, 87, 128, 96, 31, 16, 97, 20, 164, 87,
    97, 1, 0, 128, 131, 84, 4, 2, 131, 82, 145, 96, 32, 1, 145, 97, 20, 207, 86, 91, 130, 1, 145,
    144, 96, 0, 82, 96, 32, 96, 0, 32, 144, 91, 129, 84, 129, 82, 144, 96, 1, 1, 144, 96, 32, 1,
    128, 131, 17, 97, 20, 178, 87, 130, 144, 3, 96, 31, 22, 130, 1, 145, 91, 80, 80, 80, 80, 80,
    140, 97, 22, 179, 86, 91, 80, 151, 152, 151, 80, 80, 80, 80, 80, 80, 80, 80, 86, 91, 96, 0,
    131, 96, 160, 1, 81, 96, 64, 1, 81, 144, 80, 96, 0, 132, 96, 64, 1, 81, 132, 97, 21, 6, 133,
    97, 22, 223, 86, 91, 96, 64, 81, 97, 21, 24, 147, 146, 145, 144, 96, 32, 1, 97, 31, 0, 86, 91,
    96, 64, 128, 81, 96, 31, 25, 129, 132, 3, 1, 129, 82, 145, 144, 82, 144, 80, 96, 0, 97, 21, 59,
    96, 4, 99, 59, 154, 202, 0, 97, 34, 115, 86, 91, 97, 21, 69, 144, 132, 97, 34, 40, 86, 91, 144,
    80, 96, 0, 97, 21, 97, 130, 103, 255, 255, 255, 255, 255, 255, 255, 255, 22, 136, 96, 96, 1,
    81, 97, 24, 36, 86, 91, 144, 80, 97, 21, 121, 135, 96, 0, 1, 81, 133, 133, 132, 134, 140, 96,
    128, 1, 81, 97, 24, 55, 86, 91, 80, 80, 80, 80, 80, 80, 80, 86, 91, 96, 160, 133, 1, 81, 81,
    96, 64, 134, 1, 81, 96, 0, 144, 133, 133, 97, 21, 155, 134, 97, 22, 223, 86, 91, 96, 64, 81,
    97, 21, 180, 148, 147, 146, 145, 144, 96, 96, 140, 144, 27, 144, 96, 32, 1, 97, 31, 204, 86,
    91, 96, 64, 128, 81, 96, 31, 25, 129, 132, 3, 1, 129, 82, 145, 144, 82, 144, 80, 96, 0, 97, 21,
    215, 96, 4, 99, 59, 154, 202, 0, 97, 34, 115, 86, 91, 97, 21, 225, 144, 132, 97, 34, 40, 86,
    91, 144, 80, 96, 0, 97, 21, 253, 130, 103, 255, 255, 255, 255, 255, 255, 255, 255, 22, 138, 96,
    96, 1, 81, 97, 24, 36, 86, 91, 144, 80, 97, 13, 124, 137, 96, 0, 1, 81, 133, 133, 132, 134,
    142, 96, 128, 1, 81, 97, 24, 55, 86, 91, 96, 160, 132, 1, 81, 96, 32, 1, 81, 96, 64, 133, 1,
    81, 96, 0, 144, 133, 97, 22, 48, 134, 97, 22, 223, 86, 91, 96, 64, 81, 97, 22, 72, 147, 146,
    145, 144, 96, 96, 136, 144, 27, 144, 96, 32, 1, 97, 31, 68, 86, 91, 96, 64, 128, 81, 96, 31,
    25, 129, 132, 3, 1, 129, 82, 145, 144, 82, 144, 80, 96, 0, 97, 22, 107, 96, 4, 99, 59, 154,
    202, 0, 97, 34, 115, 86, 91, 97, 22, 117, 144, 132, 97, 34, 40, 86, 91, 144, 80, 96, 0, 97, 22,
    145, 130, 103, 255, 255, 255, 255, 255, 255, 255, 255, 22, 137, 96, 96, 1, 81, 97, 24, 36, 86,
    91, 144, 80, 97, 22, 169, 136, 96, 0, 1, 81, 133, 133, 132, 134, 141, 96, 128, 1, 81, 97, 24,
    55, 86, 91, 80, 80, 80, 80, 80, 80, 80, 80, 86, 91, 96, 160, 128, 132, 1, 81, 1, 81, 96, 64,
    132, 1, 81, 96, 0, 144, 132, 97, 22, 205, 133, 97, 22, 223, 86, 91, 96, 64, 81, 97, 21, 24,
    147, 146, 145, 144, 96, 32, 1, 97, 31, 156, 86, 91, 96, 0, 129, 144, 80, 96, 8, 129, 126, 255,
    0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255,
    0, 255, 0, 255, 0, 255, 22, 144, 27, 96, 8, 130, 127, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0,
    255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 255, 0, 22,
    144, 28, 23, 144, 80, 96, 16, 129, 125, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255,
    255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 22, 144, 27, 96, 16, 130,
    127, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 255, 255,
    0, 0, 255, 255, 0, 0, 255, 255, 0, 0, 22, 144, 28, 23, 144, 80, 96, 32, 129, 123, 255, 255,
    255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255,
    255, 255, 22, 144, 27, 96, 32, 130, 127, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0,
    0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 22, 144, 28, 23, 144,
    80, 96, 64, 129, 119, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,
    255, 255, 255, 255, 255, 255, 22, 144, 27, 96, 64, 130, 119, 255, 255, 255, 255, 255, 255, 255,
    255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 25, 22, 144, 28, 23, 144,
    80, 96, 128, 129, 144, 27, 96, 128, 130, 144, 28, 23, 144, 80, 145, 144, 80, 86, 91, 96, 0, 97,
    24, 48, 130, 132, 97, 34, 84, 86, 91, 147, 146, 80, 80, 80, 86, 91, 96, 0, 96, 64, 81, 128, 96,
    64, 1, 96, 64, 82, 128, 96, 1, 96, 255, 22, 129, 82, 96, 32, 1, 97, 24, 87, 137, 97, 24, 198,
    86, 91, 144, 82, 96, 64, 81, 99, 53, 234, 205, 3, 96, 226, 27, 129, 82, 144, 145, 80, 97, 8,
    13, 144, 99, 215, 171, 52, 12, 144, 97, 24, 139, 144, 132, 144, 134, 144, 139, 144, 139, 144,
    139, 144, 139, 144, 96, 4, 1, 97, 32, 100, 86, 91, 96, 0, 96, 64, 81, 128, 131, 3, 129, 96, 0,
    135, 128, 59, 21, 128, 21, 97, 24, 165, 87, 96, 0, 128, 253, 91, 80, 90, 241, 21, 128, 21, 97,
    24, 185, 87, 61, 96, 0, 128, 62, 61, 96, 0, 253, 91, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
    80, 86, 91, 96, 64, 128, 81, 96, 1, 128, 130, 82, 129, 131, 1, 144, 146, 82, 96, 96, 145, 96,
    0, 145, 144, 129, 96, 32, 1, 91, 96, 96, 129, 82, 96, 32, 1, 144, 96, 1, 144, 3, 144, 129, 97,
    24, 225, 87, 80, 80, 96, 64, 128, 81, 96, 0, 96, 32, 130, 1, 82, 96, 1, 96, 1, 96, 224, 27, 3,
    25, 96, 224, 135, 144, 27, 22, 96, 33, 130, 1, 82, 129, 81, 128, 130, 3, 96, 5, 1, 129, 82, 96,
    37, 144, 145, 1, 144, 145, 82, 144, 145, 80, 129, 96, 0, 129, 81, 129, 16, 97, 25, 74, 87, 99,
    78, 72, 123, 113, 96, 224, 27, 96, 0, 82, 96, 50, 96, 4, 82, 96, 36, 96, 0, 253, 91, 96, 32,
    144, 129, 2, 145, 144, 145, 1, 1, 82, 144, 80, 91, 145, 144, 80, 86, 91, 130, 128, 84, 97, 25,
    105, 144, 97, 34, 234, 86, 91, 144, 96, 0, 82, 96, 32, 96, 0, 32, 144, 96, 31, 1, 96, 32, 144,
    4, 129, 1, 146, 130, 97, 25, 139, 87, 96, 0, 133, 85, 97, 25, 209, 86, 91, 130, 96, 31, 16, 97,
    25, 164, 87, 130, 128, 1, 96, 255, 25, 130, 53, 22, 23, 133, 85, 97, 25, 209, 86, 91, 130, 128,
    1, 96, 1, 1, 133, 85, 130, 21, 97, 25, 209, 87, 145, 130, 1, 91, 130, 129, 17, 21, 97, 25, 209,
    87, 130, 53, 130, 85, 145, 96, 32, 1, 145, 144, 96, 1, 1, 144, 97, 25, 182, 86, 91, 80, 97, 25,
    221, 146, 145, 80, 97, 25, 225, 86, 91, 80, 144, 86, 91, 91, 128, 130, 17, 21, 97, 25, 221, 87,
    96, 0, 129, 85, 96, 1, 1, 97, 25, 226, 86, 91, 128, 81, 97, 25, 88, 129, 97, 35, 81, 86, 91,
    96, 0, 130, 96, 31, 131, 1, 18, 97, 26, 17, 87, 128, 129, 253, 91, 129, 81, 103, 255, 255, 255,
    255, 255, 255, 255, 255, 129, 17, 21, 97, 26, 43, 87, 97, 26, 43, 97, 35, 59, 86, 91, 97, 26,
    62, 96, 31, 130, 1, 96, 31, 25, 22, 96, 32, 1, 97, 33, 223, 86, 91, 129, 129, 82, 132, 96, 32,
    131, 134, 1, 1, 17, 21, 97, 26, 82, 87, 130, 131, 253, 91, 97, 26, 99, 130, 96, 32, 131, 1, 96,
    32, 135, 1, 97, 34, 186, 86, 91, 148, 147, 80, 80, 80, 80, 86, 91, 96, 0, 96, 64, 130, 132, 3,
    18, 21, 97, 26, 124, 87, 128, 129, 253, 91, 97, 26, 134, 96, 64, 97, 33, 223, 86, 91, 144, 80,
    129, 81, 96, 255, 129, 22, 129, 20, 97, 26, 153, 87, 96, 0, 128, 253, 91, 129, 82, 96, 32, 130,
    129, 1, 81, 103, 255, 255, 255, 255, 255, 255, 255, 255, 128, 130, 17, 21, 97, 26, 183, 87, 96,
    0, 128, 253, 91, 129, 133, 1, 145, 80, 133, 96, 31, 131, 1, 18, 97, 26, 203, 87, 96, 0, 128,
    253, 91, 129, 81, 129, 129, 17, 21, 97, 26, 221, 87, 97, 26, 221, 97, 35, 59, 86, 91, 97, 26,
    235, 132, 130, 96, 5, 27, 1, 97, 33, 223, 86, 91, 129, 129, 82, 132, 129, 1, 146, 80, 131, 133,
    1, 96, 0, 91, 131, 129, 16, 21, 97, 27, 34, 87, 97, 27, 16, 138, 136, 132, 81, 137, 1, 1, 97,
    26, 1, 86, 91, 133, 82, 147, 134, 1, 147, 144, 134, 1, 144, 96, 1, 1, 97, 26, 249, 86, 91, 80,
    80, 128, 133, 135, 1, 82, 80, 80, 80, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 96, 192, 130,
    132, 3, 18, 21, 97, 27, 69, 87, 128, 129, 253, 91, 97, 27, 79, 96, 192, 97, 33, 223, 86, 91,
    144, 80, 97, 27, 90, 130, 97, 27, 194, 86, 91, 129, 82, 97, 27, 104, 96, 32, 131, 1, 97, 27,
    194, 86, 91, 96, 32, 130, 1, 82, 97, 27, 121, 96, 64, 131, 1, 97, 27, 194, 86, 91, 96, 64, 130,
    1, 82, 97, 27, 138, 96, 96, 131, 1, 97, 27, 194, 86, 91, 96, 96, 130, 1, 82, 97, 27, 155, 96,
    128, 131, 1, 97, 27, 194, 86, 91, 96, 128, 130, 1, 82, 97, 27, 172, 96, 160, 131, 1, 97, 27,
    194, 86, 91, 96, 160, 130, 1, 82, 146, 145, 80, 80, 86, 91, 128, 81, 97, 25, 88, 129, 97, 35,
    105, 86, 91, 128, 81, 103, 255, 255, 255, 255, 255, 255, 255, 255, 129, 22, 129, 20, 97, 25,
    88, 87, 96, 0, 128, 253, 91, 96, 0, 96, 32, 130, 132, 3, 18, 21, 97, 27, 235, 87, 128, 129,
    253, 91, 129, 53, 97, 24, 48, 129, 97, 35, 81, 86, 91, 96, 0, 96, 32, 130, 132, 3, 18, 21, 97,
    28, 7, 87, 128, 129, 253, 91, 129, 81, 128, 21, 21, 129, 20, 97, 24, 48, 87, 129, 130, 253, 91,
    96, 0, 96, 32, 130, 132, 3, 18, 21, 97, 28, 39, 87, 128, 129, 253, 91, 129, 81, 103, 255, 255,
    255, 255, 255, 255, 255, 255, 128, 130, 17, 21, 97, 28, 62, 87, 130, 131, 253, 91, 144, 131, 1,
    144, 97, 1, 96, 130, 134, 3, 18, 21, 97, 28, 82, 87, 130, 131, 253, 91, 97, 28, 92, 96, 192,
    97, 33, 223, 86, 91, 97, 28, 101, 131, 97, 27, 183, 86, 91, 129, 82, 97, 28, 115, 96, 32, 132,
    1, 97, 25, 246, 86, 91, 96, 32, 130, 1, 82, 96, 64, 131, 1, 81, 130, 129, 17, 21, 97, 28, 137,
    87, 132, 133, 253, 91, 97, 28, 149, 135, 130, 134, 1, 97, 26, 1, 86, 91, 96, 64, 131, 1, 82,
    80, 96, 96, 131, 1, 81, 96, 96, 130, 1, 82, 96, 128, 131, 1, 81, 130, 129, 17, 21, 97, 28, 182,
    87, 132, 133, 253, 91, 97, 28, 194, 135, 130, 134, 1, 97, 26, 107, 86, 91, 96, 128, 131, 1, 82,
    80, 97, 28, 213, 134, 96, 160, 133, 1, 97, 27, 52, 86, 91, 96, 160, 130, 1, 82, 149, 148, 80,
    80, 80, 80, 80, 86, 91, 96, 0, 96, 32, 130, 132, 3, 18, 21, 97, 28, 244, 87, 128, 129, 253, 91,
    80, 81, 145, 144, 80, 86, 91, 96, 0, 128, 96, 0, 128, 96, 128, 133, 135, 3, 18, 21, 97, 29, 16,
    87, 130, 131, 253, 91, 132, 53, 147, 80, 96, 32, 133, 1, 53, 97, 29, 34, 129, 97, 35, 105, 86,
    91, 146, 80, 96, 64, 133, 1, 53, 97, 29, 50, 129, 97, 35, 81, 86, 91, 145, 80, 96, 96, 133, 1,
    53, 97, 29, 66, 129, 97, 35, 81, 86, 91, 147, 150, 146, 149, 80, 144, 147, 80, 80, 86, 91, 96,
    0, 96, 32, 130, 132, 3, 18, 21, 97, 29, 94, 87, 128, 129, 253, 91, 129, 53, 97, 24, 48, 129,
    97, 35, 105, 86, 91, 96, 0, 128, 96, 64, 131, 133, 3, 18, 21, 97, 29, 123, 87, 129, 130, 253,
    91, 130, 53, 97, 29, 134, 129, 97, 35, 105, 86, 91, 145, 80, 96, 32, 131, 1, 53, 97, 29, 150,
    129, 97, 35, 81, 86, 91, 128, 145, 80, 80, 146, 80, 146, 144, 80, 86, 91, 96, 0, 128, 96, 0,
    128, 96, 96, 133, 135, 3, 18, 21, 97, 29, 182, 87, 129, 130, 253, 91, 132, 53, 97, 29, 193,
    129, 97, 35, 105, 86, 91, 147, 80, 96, 32, 133, 1, 53, 103, 255, 255, 255, 255, 255, 255, 255,
    255, 128, 130, 17, 21, 97, 29, 221, 87, 131, 132, 253, 91, 129, 135, 1, 145, 80, 135, 96, 31,
    131, 1, 18, 97, 29, 240, 87, 131, 132, 253, 91, 129, 53, 129, 129, 17, 21, 97, 29, 254, 87,
    132, 133, 253, 91, 136, 96, 32, 130, 133, 1, 1, 17, 21, 97, 30, 15, 87, 132, 133, 253, 91, 149,
    152, 96, 32, 146, 144, 146, 1, 151, 80, 148, 149, 96, 64, 1, 53, 148, 80, 146, 80, 80, 80, 86,
    91, 96, 0, 128, 96, 64, 131, 133, 3, 18, 21, 97, 30, 57, 87, 129, 130, 253, 91, 130, 53, 97,
    30, 68, 129, 97, 35, 105, 86, 91, 148, 96, 32, 147, 144, 147, 1, 53, 147, 80, 80, 80, 86, 91,
    96, 0, 129, 81, 128, 132, 82, 97, 30, 106, 129, 96, 32, 134, 1, 96, 32, 134, 1, 97, 34, 186,
    86, 91, 96, 31, 1, 96, 31, 25, 22, 146, 144, 146, 1, 96, 32, 1, 146, 145, 80, 80, 86, 91, 96,
    0, 96, 64, 131, 1, 96, 255, 131, 81, 22, 132, 82, 96, 32, 128, 132, 1, 81, 96, 64, 130, 135, 1,
    82, 130, 129, 81, 128, 133, 82, 96, 96, 136, 1, 145, 80, 96, 96, 129, 96, 5, 27, 137, 1, 1,
    148, 80, 131, 131, 1, 146, 80, 133, 91, 129, 129, 16, 21, 97, 30, 227, 87, 96, 95, 25, 137,
    135, 3, 1, 131, 82, 97, 30, 209, 134, 133, 81, 97, 30, 82, 86, 91, 149, 80, 146, 132, 1, 146,
    145, 132, 1, 145, 96, 1, 1, 97, 30, 181, 86, 91, 80, 147, 151, 150, 80, 80, 80, 80, 80, 80, 80,
    86, 91, 96, 0, 130, 132, 131, 55, 145, 1, 144, 129, 82, 145, 144, 80, 86, 91, 96, 0, 132, 81,
    97, 31, 18, 129, 132, 96, 32, 137, 1, 97, 34, 186, 86, 91, 96, 15, 96, 248, 27, 144, 131, 1,
    144, 129, 82, 132, 81, 97, 31, 48, 129, 96, 1, 132, 1, 96, 32, 137, 1, 97, 34, 186, 86, 91, 1,
    96, 1, 129, 1, 147, 144, 147, 82, 80, 80, 96, 33, 1, 146, 145, 80, 80, 86, 91, 96, 0, 133, 81,
    97, 31, 86, 129, 132, 96, 32, 138, 1, 97, 34, 186, 86, 91, 96, 7, 96, 249, 27, 144, 131, 1,
    144, 129, 82, 133, 81, 97, 31, 116, 129, 96, 1, 132, 1, 96, 32, 138, 1, 97, 34, 186, 86, 91, 1,
    96, 1, 129, 1, 148, 144, 148, 82, 80, 80, 107, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 25, 22, 96, 33, 130, 1, 82, 96, 53, 1, 146, 145, 80, 80, 86, 91, 96, 0, 132, 81,
    97, 31, 174, 129, 132, 96, 32, 137, 1, 97, 34, 186, 86, 91, 96, 1, 96, 252, 27, 144, 131, 1,
    144, 129, 82, 132, 81, 97, 31, 48, 129, 96, 1, 132, 1, 96, 32, 137, 1, 97, 34, 186, 86, 91, 96,
    0, 134, 81, 97, 31, 222, 129, 132, 96, 32, 139, 1, 97, 34, 186, 86, 91, 96, 13, 96, 248, 27,
    144, 131, 1, 144, 129, 82, 133, 135, 96, 1, 131, 1, 55, 96, 1, 149, 1, 148, 133, 1, 147, 144,
    147, 82, 80, 107, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 25, 22, 96, 33,
    131, 1, 82, 80, 96, 53, 1, 146, 145, 80, 80, 86, 91, 96, 0, 96, 32, 130, 82, 97, 24, 48, 96,
    32, 131, 1, 132, 97, 30, 82, 86, 91, 96, 32, 128, 130, 82, 96, 24, 144, 130, 1, 82, 127, 112,
    97, 114, 97, 99, 104, 97, 105, 110, 32, 110, 111, 116, 32, 114, 101, 103, 105, 115, 116, 101,
    114, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 96, 64, 130, 1, 82, 96, 96, 1, 144, 86, 91, 96, 0, 96,
    192, 130, 82, 97, 32, 119, 96, 192, 131, 1, 137, 97, 30, 126, 86, 91, 130, 129, 3, 96, 32, 132,
    1, 82, 97, 32, 137, 129, 137, 97, 30, 126, 86, 91, 144, 80, 103, 255, 255, 255, 255, 255, 255,
    255, 255, 128, 136, 22, 96, 64, 133, 1, 82, 131, 130, 3, 96, 96, 133, 1, 82, 97, 32, 174, 130,
    136, 97, 30, 82, 86, 91, 146, 80, 133, 96, 128, 133, 1, 82, 128, 133, 22, 96, 160, 133, 1, 82,
    80, 80, 151, 150, 80, 80, 80, 80, 80, 80, 80, 86, 91, 99, 255, 255, 255, 255, 134, 22, 129, 82,
    96, 1, 96, 1, 96, 160, 27, 3, 133, 22, 96, 32, 130, 1, 82, 96, 128, 96, 64, 130, 1, 129, 144,
    82, 129, 1, 131, 144, 82, 96, 0, 131, 133, 96, 160, 132, 1, 55, 128, 96, 160, 133, 132, 1, 1,
    82, 96, 160, 96, 31, 25, 96, 31, 134, 1, 22, 131, 1, 1, 144, 80, 130, 96, 96, 131, 1, 82, 150,
    149, 80, 80, 80, 80, 80, 80, 86, 91, 96, 0, 99, 255, 255, 255, 255, 133, 22, 130, 82, 96, 32,
    96, 96, 129, 132, 1, 82, 129, 133, 84, 131, 96, 1, 130, 129, 28, 145, 80, 128, 131, 22, 128,
    97, 33, 78, 87, 96, 127, 131, 22, 146, 80, 91, 133, 131, 16, 129, 20, 21, 97, 33, 108, 87, 99,
    78, 72, 123, 113, 96, 224, 27, 135, 82, 96, 34, 96, 4, 82, 96, 36, 135, 253, 91, 96, 96, 136,
    1, 131, 144, 82, 96, 128, 136, 1, 129, 128, 21, 97, 33, 139, 87, 96, 1, 129, 20, 97, 33, 156,
    87, 97, 33, 198, 86, 91, 96, 255, 25, 134, 22, 130, 82, 135, 130, 1, 150, 80, 97, 33, 198, 86,
    91, 96, 0, 140, 129, 82, 96, 32, 144, 32, 137, 91, 134, 129, 16, 21, 97, 33, 192, 87, 129, 84,
    132, 130, 1, 82, 144, 133, 1, 144, 137, 1, 97, 33, 167, 86, 91, 131, 1, 151, 80, 80, 91, 80,
    80, 80, 80, 80, 80, 128, 146, 80, 80, 80, 130, 96, 64, 131, 1, 82, 148, 147, 80, 80, 80, 80,
    86, 91, 96, 64, 81, 96, 31, 130, 1, 96, 31, 25, 22, 129, 1, 103, 255, 255, 255, 255, 255, 255,
    255, 255, 129, 17, 130, 130, 16, 23, 21, 97, 34, 8, 87, 97, 34, 8, 97, 35, 59, 86, 91, 96, 64,
    82, 145, 144, 80, 86, 91, 96, 0, 130, 25, 130, 17, 21, 97, 34, 35, 87, 97, 34, 35, 97, 35, 37,
    86, 91, 80, 1, 144, 86, 91, 96, 0, 103, 255, 255, 255, 255, 255, 255, 255, 255, 128, 131, 22,
    129, 133, 22, 128, 131, 3, 130, 17, 21, 97, 34, 75, 87, 97, 34, 75, 97, 35, 37, 86, 91, 1, 148,
    147, 80, 80, 80, 80, 86, 91, 96, 0, 129, 96, 0, 25, 4, 131, 17, 130, 21, 21, 22, 21, 97, 34,
    110, 87, 97, 34, 110, 97, 35, 37, 86, 91, 80, 2, 144, 86, 91, 96, 0, 103, 255, 255, 255, 255,
    255, 255, 255, 255, 128, 131, 22, 129, 133, 22, 129, 131, 4, 129, 17, 130, 21, 21, 22, 21, 97,
    34, 154, 87, 97, 34, 154, 97, 35, 37, 86, 91, 2, 148, 147, 80, 80, 80, 80, 86, 91, 96, 0, 130,
    130, 16, 21, 97, 34, 181, 87, 97, 34, 181, 97, 35, 37, 86, 91, 80, 3, 144, 86, 91, 96, 0, 91,
    131, 129, 16, 21, 97, 34, 213, 87, 129, 129, 1, 81, 131, 130, 1, 82, 96, 32, 1, 97, 34, 189,
    86, 91, 131, 129, 17, 21, 97, 34, 228, 87, 96, 0, 132, 132, 1, 82, 91, 80, 80, 80, 80, 86, 91,
    96, 1, 129, 129, 28, 144, 130, 22, 128, 97, 34, 254, 87, 96, 127, 130, 22, 145, 80, 91, 96, 32,
    130, 16, 129, 20, 21, 97, 35, 31, 87, 99, 78, 72, 123, 113, 96, 224, 27, 96, 0, 82, 96, 34, 96,
    4, 82, 96, 36, 96, 0, 253, 91, 80, 145, 144, 80, 86, 91, 99, 78, 72, 123, 113, 96, 224, 27, 96,
    0, 82, 96, 17, 96, 4, 82, 96, 36, 96, 0, 253, 91, 99, 78, 72, 123, 113, 96, 224, 27, 96, 0, 82,
    96, 65, 96, 4, 82, 96, 36, 96, 0, 253, 91, 96, 1, 96, 1, 96, 160, 27, 3, 129, 22, 129, 20, 97,
    35, 102, 87, 96, 0, 128, 253, 91, 80, 86, 91, 99, 255, 255, 255, 255, 129, 22, 129, 20, 97, 35,
    102, 87, 96, 0, 128, 253, 254, 162, 100, 105, 112, 102, 115, 88, 34, 18, 32, 78, 243, 238, 238,
    237, 15, 123, 188, 34, 137, 156, 88, 177, 58, 7, 162, 120, 47, 211, 225, 254, 50, 109, 53, 200,
    29, 227, 27, 202, 124, 26, 161, 100, 115, 111, 108, 99, 67, 0, 8, 3, 0, 51,
];

pub(crate) fn deploy(registry: &[u8; 20], token: &[u8; 20]) {
    // use contract bytecode + constructor parameters
    let mut init = CONTRACT_BYTECODE.to_vec();
    init.append(
        encode(&vec![
            Token::Address(registry.into()),
            Token::Address(token.into()),
        ])
        .as_mut(),
    );

    // create parachain staking contract
    assert_ok!(EVM::create(
        RuntimeOrigin::root(),
        ALITH.into(),
        init,
        U256::zero(),
        GAS_LIMIT,
        MAX_FEE_PER_GAS.into(),
        None,
        None,
        Vec::new()
    ));
    System::assert_last_event(
        pallet_evm::Event::Created {
            address: STAKING_CONTRACT_ADDRESS.into(),
        }
        .into(),
    );
}

pub(crate) fn init(governance: &[u8; 20]) {
    #[allow(deprecated)]
    let input = Function {
        name: "init".to_string(),
        inputs: vec![Param {
            name: "_governanceAddress".to_string(),
            kind: ParamType::Address,
            internal_type: None,
        }],
        outputs: vec![],
        constant: None,
        state_mutability: Default::default(),
    }
    .encode_input(&vec![Token::Address(governance.into())])
    .unwrap();

    // init parachain staking contract
    assert_ok!(EVM::call(
        RuntimeOrigin::root(),
        ALITH.into(),
        STAKING_CONTRACT_ADDRESS.into(),
        input,
        U256::zero(),
        GAS_LIMIT,
        MAX_FEE_PER_GAS.into(),
        None,
        None,
        Vec::new()
    ));
    System::assert_has_event(
        pallet_evm::Event::Executed {
            address: H160(STAKING_CONTRACT_ADDRESS),
        }
        .into(),
    );
}

pub(crate) fn approve(by: &[u8; 20], asset: u128, delegate: &[u8; 20], amount: u128) {
    assert_ok!(Assets::approve_transfer(
        RuntimeOrigin::signed((*by).into()),
        asset.into(),
        (*delegate).into(),
        amount
    ));
    //todo: assert event
}

pub(crate) fn mint(asset: u128, who: &[u8; 20], amount: u128) {
    use frame_support::traits::fungibles::Mutate;

    assert_ok!(Assets::mint_into(asset, &(*who).into(), amount));
    //todo: assert event
}

pub(crate) fn deposit_parachain_stake(
    source: &[u8; 20],
    para_id: u32,
    account: Vec<u8>,
    amount: u128,
) {
    #[allow(deprecated)]
    let input = Function {
        name: "depositParachainStake".to_string(),
        inputs: vec![
            Param {
                name: "_paraId".to_string(),
                kind: ParamType::Uint(32),
                internal_type: None,
            },
            Param {
                name: "_account".to_string(),
                kind: ParamType::Bytes,
                internal_type: None,
            },
            Param {
                name: "_amount".to_string(),
                kind: ParamType::Uint(256),
                internal_type: None,
            },
        ],
        outputs: vec![],
        constant: None,
        state_mutability: Default::default(),
    }
    .encode_input(&vec![
        Token::Uint(para_id.into()),
        Token::Bytes(account),
        Token::Uint(amount.into()),
    ])
    .unwrap();

    // call parachain staking contract
    assert_ok!(EVM::call(
        RuntimeOrigin::root(),
        source.into(),
        STAKING_CONTRACT_ADDRESS.into(),
        input,
        U256::zero(),
        GAS_LIMIT,
        MAX_FEE_PER_GAS.into(),
        None,
        None,
        Vec::new()
    ));
    System::assert_has_event(
        pallet_evm::Event::Executed {
            address: H160(STAKING_CONTRACT_ADDRESS),
        }
        .into(),
    );
}

pub(crate) fn request_parachain_stake_withdraw(source: &[u8; 20], para_id: u32, amount: u128) {
    #[allow(deprecated)]
    let input = Function {
        name: "requestParachainStakeWithdraw".to_string(),
        inputs: vec![
            Param {
                name: "_paraId".to_string(),
                kind: ParamType::Uint(32),
                internal_type: None,
            },
            Param {
                name: "_amount".to_string(),
                kind: ParamType::Uint(256),
                internal_type: None,
            },
        ],
        outputs: vec![],
        constant: None,
        state_mutability: Default::default(),
    }
    .encode_input(&vec![
        Token::Uint(para_id.into()),
        Token::Uint(amount.into()),
    ])
    .unwrap();

    // call parachain staking contract
    assert_ok!(EVM::call(
        RuntimeOrigin::root(),
        source.into(),
        STAKING_CONTRACT_ADDRESS.into(),
        input,
        U256::zero(),
        GAS_LIMIT,
        MAX_FEE_PER_GAS.into(),
        None,
        None,
        Vec::new()
    ));
    System::assert_has_event(
        pallet_evm::Event::Executed {
            address: H160(STAKING_CONTRACT_ADDRESS),
        }
        .into(),
    );
}

pub(crate) fn withdraw_parachain_stake(source: &[u8; 20], para_id: u32) {
    #[allow(deprecated)]
    let input = Function {
        name: "withdrawParachainStake".to_string(),
        inputs: vec![Param {
            name: "_paraId".to_string(),
            kind: ParamType::Uint(32),
            internal_type: None,
        }],
        outputs: vec![],
        constant: None,
        state_mutability: Default::default(),
    }
    .encode_input(&vec![Token::Uint(para_id.into())])
    .unwrap();

    // call parachain staking contract
    assert_ok!(EVM::call(
        RuntimeOrigin::root(),
        source.into(),
        STAKING_CONTRACT_ADDRESS.into(),
        input,
        U256::zero(),
        GAS_LIMIT,
        MAX_FEE_PER_GAS.into(),
        None,
        None,
        Vec::new()
    ));
    System::assert_has_event(
        pallet_evm::Event::Executed {
            address: H160(STAKING_CONTRACT_ADDRESS),
        }
        .into(),
    );
}

pub(crate) fn assert_new_staker_event(staker: &[u8; 20], amount: u128) {
    let event = Event {
        name: "NewStaker".to_string(),
        inputs: vec![
            EventParam {
                name: "_staker".to_string(),
                kind: ParamType::Address,
                indexed: true,
            },
            EventParam {
                name: "_amount".to_string(),
                kind: ParamType::Uint(256),
                indexed: true,
            },
        ],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![
                    event.signature(),
                    {
                        let mut topic = [0u8; 32];
                        topic[12..].clone_from_slice(staker);
                        topic
                    }
                    .into(),
                    {
                        let topic: [u8; 32] = encode(&vec![Token::Uint(amount.into())])
                            .try_into()
                            .unwrap();
                        topic
                    }
                    .into(),
                ],
                data: Default::default(),
            },
        }
        .into(),
    );
}

pub(crate) fn assert_new_parachain_staker_event(
    para_id: u32,
    staker: &[u8; 20],
    account: Vec<u8>,
    amount: u128,
) {
    let event = Event {
        name: "NewParachainStaker".to_string(),
        inputs: vec![
            EventParam {
                name: "_paraId".to_string(),
                kind: ParamType::Uint(32),
                indexed: false,
            },
            EventParam {
                name: "_staker".to_string(),
                kind: ParamType::Address,
                indexed: false,
            },
            EventParam {
                name: "_account".to_string(),
                kind: ParamType::Bytes,
                indexed: false,
            },
            EventParam {
                name: "_amount".to_string(),
                kind: ParamType::Uint(256),
                indexed: false,
            },
        ],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![event.signature()],
                data: encode(&vec![
                    Token::Uint(para_id.into()),
                    Token::Address(staker.into()),
                    Token::Bytes(account),
                    Token::Uint(amount.into()),
                ]),
            },
        }
        .into(),
    );
}

pub(crate) fn assert_parachain_reporter_slashed_event(
    para_id: u32,
    reporter: &[u8; 20],
    recipient: &[u8; 20],
    slash_amount: u128,
) {
    let event = Event {
        name: "ParachainReporterSlashed".to_string(),
        inputs: vec![
            EventParam {
                name: "_paraId".to_string(),
                kind: ParamType::Uint(32),
                indexed: false,
            },
            EventParam {
                name: "_reporter".to_string(),
                kind: ParamType::Address,
                indexed: false,
            },
            EventParam {
                name: "_recipient".to_string(),
                kind: ParamType::Address,
                indexed: false,
            },
            EventParam {
                name: "_slashAmount".to_string(),
                kind: ParamType::Uint(256),
                indexed: false,
            },
        ],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![event.signature()],
                data: encode(&vec![
                    Token::Uint(para_id.into()),
                    Token::Address(reporter.into()),
                    Token::Address(recipient.into()),
                    Token::Uint(slash_amount.into()),
                ]),
            },
        }
        .into(),
    );
}

pub(crate) fn assert_stake_withdraw_requested_event(staker: &[u8; 20], amount: u128) {
    let event = Event {
        name: "StakeWithdrawRequested".to_string(),
        inputs: vec![
            EventParam {
                name: "_staker".to_string(),
                kind: ParamType::Address,
                indexed: false,
            },
            EventParam {
                name: "_amount".to_string(),
                kind: ParamType::Uint(256),
                indexed: false,
            },
        ],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![event.signature()],
                data: encode(&vec![
                    Token::Address(staker.into()),
                    Token::Uint(amount.into()),
                ]),
            },
        }
        .into(),
    );
}

pub(crate) fn assert_parachain_stake_withdraw_requested_event(
    para_id: u32,
    account: Vec<u8>,
    amount: u128,
) {
    let event = Event {
        name: "ParachainStakeWithdrawRequested".to_string(),
        inputs: vec![
            EventParam {
                name: "_paraId".to_string(),
                kind: ParamType::Uint(32),
                indexed: false,
            },
            EventParam {
                name: "_account".to_string(),
                kind: ParamType::Bytes,
                indexed: false,
            },
            EventParam {
                name: "_amount".to_string(),
                kind: ParamType::Uint(256),
                indexed: false,
            },
        ],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![event.signature()],
                data: encode(&vec![
                    Token::Uint(para_id.into()),
                    Token::Bytes(account),
                    Token::Uint(amount.into()),
                ]),
            },
        }
        .into(),
    );
}

pub(crate) fn assert_stake_withdrawn_event(staker: &[u8; 20]) {
    let event = Event {
        name: "StakeWithdrawn".to_string(),
        inputs: vec![EventParam {
            name: "_staker".to_string(),
            kind: ParamType::Address,
            indexed: false,
        }],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![event.signature()],
                data: encode(&vec![Token::Address(staker.into())]),
            },
        }
        .into(),
    );
}

pub(crate) fn assert_parachain_stake_withdrawn_event(para_id: u32, staker: &[u8; 20]) {
    let event = Event {
        name: "ParachainStakeWithdrawn".to_string(),
        inputs: vec![
            EventParam {
                name: "_paraId".to_string(),
                kind: ParamType::Uint(32),
                indexed: false,
            },
            EventParam {
                name: "_staker".to_string(),
                kind: ParamType::Address,
                indexed: false,
            },
        ],
        anonymous: false,
    };

    System::assert_has_event(
        pallet_evm::Event::Log {
            log: ethereum::Log {
                address: STAKING_CONTRACT_ADDRESS.into(),
                topics: vec![event.signature()],
                data: encode(&vec![
                    Token::Uint(para_id.into()),
                    Token::Address(staker.into()),
                ]),
            },
        }
        .into(),
    );
}
